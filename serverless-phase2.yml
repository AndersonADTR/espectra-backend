service: espectra-backend-phase2

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 1024
  timeout: 29
  logRetentionInDays: 14
  tracing:
    lambda: true
  tags:
    Environment: ${self:provider.stage}
    Service: ${self:custom.service}
    Owner: espectra
    Project: concierge

custom:
  service: espectra-backend

  logRetentionInDays: 14
  
  # Configuración de Table Names
  tableNames:
    connections: ${self:custom.service}-${self:provider.stage}-connection-table
    context: ${self:custom.service}-${self:provider.stage}-conversation-context-table
    tokens: ${self:custom.service}-${self:provider.stage}-token-usage-table
    handoff: ${self:custom.service}-${self:provider.stage}-handoff-table
    metrics: ${self:custom.service}-${self:provider.stage}-botpress-metrics-table

  # KMS Keys (importados del deploy previo)
  kms:
    systemKeyId: ${cf:${self:custom.service}-kms-${self:provider.stage}.SystemKMSKeyId}
    systemKeyArn: ${cf:${self:custom.service}-kms-${self:provider.stage}.SystemKMSKeyArn}
    secretsKeyId: ${cf:${self:custom.service}-kms-${self:provider.stage}.SecretsKMSKeyId}
    secretsKeyArn: ${cf:${self:custom.service}-kms-${self:provider.stage}.SecretsKMSKeyArn}
    websocketKeyId: ${cf:${self:custom.service}-kms-${self:provider.stage}.WebSocketKMSKeyId}
    websocketKeyArn: ${cf:${self:custom.service}-kms-${self:provider.stage}.WebSocketKMSKeyArn}
  
  # SNS Topics for different priority levels
  snsHighPriorityTopic: ${ssm:/espectra/${self:provider.stage}/sns/high-priority-topic}
  snsMediumPriorityTopic: ${ssm:/espectra/${self:provider.stage}/sns/medium-priority-topic}
  snsLowPriorityTopic: ${ssm:/espectra/${self:provider.stage}/sns/low-priority-topic}
    
  # Configuración de handoff
  handoff:
    maxQueueSize: 100
    maxWaitTime: 300

  redis:
    instanceType: 'cache.t3.micro'

functions:
  botpressMetricsCollector:
    handler: services/metrics/handlers/metrics-collector.handler
    name: ${self:custom.service}-${self:provider.stage}-botpress-metrics
    description: Processes Botpress metrics events
    memorySize: 256
    timeout: 30
    environment:
      METRICS_TABLE: !Ref BotpressMetricsTable
      KMS_KEY_ARN:
        Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-system-kms-key-arn
    role: !GetAtt MetricsCollectorRole.Arn
    events:
      - eventBridge:
          pattern:
            source:
              - com.espectra.botpress
            detail-type:
              - Metric
    tags:
      Service: ${self:custom.service}
      Environment: ${self:provider.stage}
      Component: Metrics
    tracing: Active
    vpc:
      securityGroupIds:
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-lambda-sg-id
      subnetIds:
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-public-subnet-1-id
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-public-subnet-2-id

resources:
  - ${file(infrastructure/dynamodb/botpress-tables.yml)}

  - ${file(infrastructure/queues/message-queues.yml)}
  
  - ${file(infrastructure/elasticache/redis.yml)}

  - ${file(infrastructure/eventbridge/botpress-event-bus.yml)}

  - ${file(infrastructure/iam/roles.yml)}
  - ${file(infrastructure/iam/websocket-roles.yml)}

outputs:
  BotpressMetricsCollectorArn:
    Description: ARN of the Botpress Metrics Collector function
    Value: !GetAtt BotpressMetricsCollectorLambdaFunction.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-metrics-collector-arn

  MessageQueueUrl:
    Description: URL of the message queue
    Value: !Ref MessageQueue
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-message-queue-url

  MessageQueueArn:
    Description: ARN of the message queue
    Value: !GetAtt MessageQueue.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-message-queue-arn

  HandoffQueueUrl:
    Description: URL of the handoff queue
    Value: !Ref HandoffQueue
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-handoff-queue-url

  HandoffQueueArn:
    Description: ARN of the handoff queue
    Value: !GetAtt HandoffQueue.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-handoff-queue-arn

  MessageDLQUrl:
    Description: URL of the message DLQ
    Value: !Ref MessageDLQ
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-message-dlq-url

  HandoffDLQUrl:
    Description: URL of the handoff DLQ
    Value: !Ref HandoffDLQ
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-handoff-dlq-url

  LambdaRoleArn:
    Description: ARN of the Lambda execution IAM role
    Value: !GetAtt IamRoleLambdaExecution.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-lambda-role-arn

  WafAssociationLambdaRoleArn:
    Description: ARN of the WAF Association Lambda IAM role
    Value: !GetAtt WafAssociationLambdaRole.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-waf-association-lambda-role-arn

  MetricsCollectorRoleArn:
    Description: ARN of the Metrics Collector IAM role
    Value: !GetAtt MetricsCollectorRole.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-metrics-collector-role-arn
      
  WebSocketLambdaRoleArn:
    Description: ARN of the WebSocket Lambda IAM role
    Value: !GetAtt WebSocketLambdaRole.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-websocket-role-arn
      
  WebSocketAuthorizerRoleArn:
    Description: ARN of the WebSocket Authorizer Lambda IAM role
    Value: !GetAtt WebSocketAuthorizerRole.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-websocket-authorizer-role-arn
      
  EventBusArn:
    Description: ARN of the Botpress Event Bus
    Value: !GetAtt BotpressEventBus.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-eventbus-arn

  EventBusName:
    Description: Name of the Botpress Event Bus
    Value: !Ref BotpressEventBus
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-eventbus-name
      
  RedisEndpoint:
    Description: Redis primary endpoint
    Value: !GetAtt RedisCluster.PrimaryEndPoint.Address
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-redis-endpoint

  RedisPort:
    Description: Redis port
    Value: !GetAtt RedisCluster.PrimaryEndPoint.Port
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-redis-port

  
  RedisConnectionString:
    Description: Redis connection string with protocol
    Value: !Sub "redis://${RedisCluster.PrimaryEndPoint.Address}:${RedisCluster.PrimaryEndPoint.Port}"
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-redis-connection-string
      
  RedisClusterId:
    Description: ID of the Redis cluster
    Value: !Ref RedisCluster
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-redis-cluster-id
      
  RedisParameterGroupName:
    Description: Name of the Redis parameter group
    Value: !Ref RedisParameterGroup
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-redis-parameter-group
      
  ConversationContextTableName:
    Description: Name of the Conversation Context table
    Value: ${self:custom.tableNames.context}
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-context-table-name

  ConversationContextTableArn:
    Description: ARN of the Conversation Context table
    Value: !GetAtt ConversationContextTable.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-context-table-arn

  BotpressMetricsTableName:
    Description: Name of the Botpress Metrics table
    Value: ${self:custom.tableNames.metrics}
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-metrics-table-name

  BotpressMetricsTableArn:
    Description: ARN of the Botpress Metrics table
    Value: !GetAtt BotpressMetricsTable.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-metrics-table-arn

  TokenUsageTableName:
    Description: Name of the Token Usage table
    Value: ${self:custom.tableNames.tokens}
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-tokens-table-name

  TokenUsageTableArn:
    Description: ARN of the Token Usage table
    Value: !GetAtt TokenUsageTable.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-tokens-table-arn