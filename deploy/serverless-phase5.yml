service: espectra-backend-phase5

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 1024
  timeout: 29
  logRetentionInDays: 14
  tracing:
    lambda: true
    apiGateway: true
  logs:
    restApi:
      accessLogging: true
      executionLogging: true
      level: INFO
      fullExecutionData: true
  vpc:
    securityGroupIds:
      - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-lambda-sg-id
    subnetIds:
      - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-public-subnet-1-id
      - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-public-subnet-2-id
  environment:
    # System Variables
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    SERVICE_NAME: ${self:custom.service}
    NODE_ENV: ${self:provider.stage}
    LOG_LEVEL: ${self:custom.logLevel.${self:provider.stage}}
    METRICS_NAMESPACE: ${self:custom.service}/${self:provider.stage}
    XRAY_ENABLED: true

    # Referencias a recursos existentes
    BOTPRESS_API_URL: ${ssm:/espectra/${self:provider.stage}/botpress-api-url}
    BOTPRESS_BOT_ID: ${ssm:/espectra/${self:provider.stage}/botpress-bot-id}
    BOTPRESS_API_KEY: ${ssm:/espectra/${self:provider.stage}/botpress-api-key}
    BOTPRESS_WORKSPACE_ID: ${ssm:/espectra/${self:provider.stage}/botpress-workspace-id}
    BOTPRESS_EVENT_BUS:
      Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-eventbus-name

custom:
  service: espectra-backend
  logRetentionInDays: 14
  
  logLevel:
    dev: 'DEBUG'
    staging: 'INFO'
    prod: 'WARN'
  
  # Configuración de Table Names
  tableNames:
    connections: ${self:custom.service}-${self:provider.stage}-connection-table
    context: ${self:custom.service}-${self:provider.stage}-conversation-context-table
    tokens: ${self:custom.service}-${self:provider.stage}-token-usage-table
    history: ${self:custom.service}-${self:provider.stage}-chat-history-table
    handoff: ${self:custom.service}-${self:provider.stage}-handoff-table
    metrics: ${self:custom.service}-${self:provider.stage}-botpress-metrics-table

  # KMS Keys (importados del deploy previo)
  kms:
    systemKeyId: ${cf:${self:custom.service}-kms-${self:provider.stage}.SystemKMSKeyId}
    systemKeyArn: ${cf:${self:custom.service}-kms-${self:provider.stage}.SystemKMSKeyArn}
    secretsKeyId: ${cf:${self:custom.service}-kms-${self:provider.stage}.SecretsKMSKeyId}
    secretsKeyArn: ${cf:${self:custom.service}-kms-${self:provider.stage}.SecretsKMSKeyArn}

  # Configuración de alarmas
  alarmThresholds:
    lambda:
      errors: 5
      throttles: 5
      duration: 10000
      period: 300
    api:
      latency: 1000
      4xxErrors: 5
      5xxErrors: 1
      period: 300
    dynamodb:
      throttles: 10
      period: 300
    websocket:
      connections: 2000
      period: 300
    costs:
      monthly: 1000

  # Configuración Botpress
  botpressAlarmThresholds:
    errorRate: 5
    latency: 1000
    period: 300
    handoffQueueSize: 50
    handoffLatency: 2000
    tokenUsage: 80
    handoffSuccessRate: 90

  # SNS Topics
  snsHighPriorityTopic: ${ssm:/espectra/${self:provider.stage}/sns/high-priority-topic}
  snsMediumPriorityTopic: ${ssm:/espectra/${self:provider.stage}/sns/medium-priority-topic}
  snsLowPriorityTopic: ${ssm:/espectra/${self:provider.stage}/sns/low-priority-topic}

plugins:
  - serverless-iam-roles-per-function
  - serverless-prune-plugin
  - serverless-plugin-tracing

package:
  individually: true
  patterns:
    - "!./**"
    - "node_modules/@aws-sdk/**"
    - "node_modules/@smithy/**"
    - "node_modules/aws-sdk/**"
    - "node_modules/@aws-sdk/types/**"
    - "node_modules/tslib/**"
    - "node_modules/uuid/**"
    - "node_modules/aws-jwt-verify/**"
    - "!node_modules/@types/**"
    - "../services/**/*.ts"
    - "../services/**/*.js"
    - "../shared/**/*.ts"
    - "../shared/**/*.js"

# functions:
#   metricsCollector:
#     handler: services/metrics/handlers/collector.handler
#     name: ${self:custom.service}-${self:provider.stage}-metrics-collector
#     description: Collects and processes system metrics
#     memorySize: 256
#     timeout: 30
#     environment:
#       METRICS_TABLE:
#         Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-metrics-table-name
#       KMS_KEY_ARN:
#         Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-system-kms-key-arn
#       BOTPRESS_METRICS_TABLE:
#         Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-metrics-table-name
#     role: 
#       Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-metrics-collector-role-arn
#     events:
#       - schedule: rate(1 minute)
#       - eventBridge:
#           pattern:
#             source:
#               - com.espectra.botpress
#             detail-type:
#               - Metric
#     vpc: ${self:provider.vpc}
#     tracing: Active

#   botpressMetricsProcessor:
#     handler: services/metrics/handlers/botpress-metrics.handler
#     name: ${self:custom.service}-${self:provider.stage}-botpress-metrics
#     description: Processes Botpress specific metrics
#     memorySize: 256
#     timeout: 30
#     environment:
#       METRICS_TABLE:
#         Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-metrics-table-name
#     role: 
#       Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-metrics-collector-role-arn
#     events:
#       - schedule: rate(5 minutes)
#     vpc: ${self:provider.vpc}
#     tracing: Active

resources:
  - ${file(../infrastructure/monitoring/cloudwatch.yml)}
  - ${file(../infrastructure/monitoring/cloudwatch-alarms.yml)}
  - ${file(../infrastructure/monitoring/botpress-cloudwatch-alarms.yml)}
  - ${file(../infrastructure/monitoring/botpress-cloudwatch-dashboard.yml)}

  # CloudWatch Log Groups adicionales
  # Resources:
  #   MetricsProcessingLogGroup:
  #     Type: AWS::Logs::LogGroup
  #     Properties:
  #       LogGroupName: /aws/lambda/${self:custom.service}-${self:provider.stage}-metrics-processing
  #       RetentionInDays: ${self:custom.logRetentionInDays}
  #       KmsKeyId: 
  #         Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-system-kms-key-arn

  #   BotpressMetricsLogGroup:
  #     Type: AWS::Logs::LogGroup
  #     Properties:
  #       LogGroupName: /aws/lambda/${self:custom.service}-${self:provider.stage}-botpress-metrics
  #       RetentionInDays: ${self:custom.logRetentionInDays}
  #       KmsKeyId: 
  #         Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-system-kms-key-arn

outputs:
  # MetricsCollectorFunctionName:
  #   Description: Name of metrics collector function
  #   Value: !Ref MetricsCollectorLambdaFunction
  #   Export:
  #     Name: ${self:custom.service}-${self:provider.stage}-metrics-collector-name

  # BotpressMetricsProcessorName:
  #   Description: Name of Botpress metrics processor
  #   Value: !Ref BotpressMetricsProcessorLambdaFunction
  #   Export:
  #     Name: ${self:custom.service}-${self:provider.stage}-botpress-metrics-name

  # MetricsLogGroupName:
  #   Description: Name of metrics processing log group
  #   Value: !Ref MetricsProcessingLogGroup
  #   Export:
  #     Name: ${self:custom.service}-${self:provider.stage}-metrics-log-group

  # BotpressMetricsLogGroupName:
  #   Description: Name of Botpress metrics log group
  #   Value: !Ref BotpressMetricsLogGroup
  #   Export:
  #     Name: ${self:custom.service}-${self:provider.stage}-botpress-metrics-log-group
      
  CloudWatchRoleArn:
    Description: ARN of the CloudWatch IAM role
    Value: !GetAtt CloudWatchRole.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-cloudwatch-role-arn

  ApiGatewayLogGroupName:
    Description: Name of the API Gateway log group
    Value: !Ref ApiGatewayLogGroup
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-apigateway-log-group

  LambdaLogGroupName:
    Description: Name of the Lambda log group
    Value: !Ref LambdaLogGroup
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-lambda-log-group

  MetricsLogGroupName:
    Description: Name of the metrics log group
    Value: !Ref MetricsLogGroup
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-metrics-log-group

  BotpressLogGroupName:
    Description: Name of the Botpress log group
    Value: !Ref BotpressLogGroup
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-botpress-log-group

  WebSocketLogGroupName:
    Description: Name of the WebSocket log group
    Value: !Ref WebSocketLogGroup
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-websocket-log-group

  MainDashboardURL:
    Description: URL of the main CloudWatch dashboard
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${self:custom.service}-${self:provider.stage}-main
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-main-dashboard-url
      
  ServiceHealthAlarmArn:
    Description: ARN of the composite service health alarm
    Value: !GetAtt ServiceHealthAlarm.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-service-health-cw-alarm-arn

  LowPriorityAlarms:
    Description: List of low priority alarm ARNs
    Value: 
      Fn::Join:
        - ","
        - - !GetAtt LambdaDurationAlarm.Arn
          - !GetAtt Api4xxErrorAlarm.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-low-priority-cw-alarms

  MediumPriorityAlarms:
    Description: List of medium priority alarm ARNs
    Value:
      Fn::Join:
        - ","
        - - !GetAtt LambdaErrorsAlarm.Arn
          - !GetAtt LambdaThrottlesAlarm.Arn
          - !GetAtt ApiLatencyAlarm.Arn
          - !GetAtt DynamoDBThrottlesAlarm.Arn
          - !GetAtt WebSocketConnectionsAlarm.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-medium-priority-cw-alarms

  HighPriorityAlarms:
    Description: List of high priority alarm ARNs
    Value:
      Fn::Join:
        - ","
        - - !GetAtt ServiceHealthAlarm.Arn
          - !GetAtt Api5xxErrorAlarm.Arn
          - !GetAtt DynamoDBSystemErrorsAlarm.Arn
          - !GetAtt KMSKeyErrorAlarm.Arn
          - !GetAtt MonthlyEstimatedChargesAlarm.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-high-priority-cw-alarms

  BillingAlarmArn:
    Description: ARN of the monthly billing alarm
    Value: !GetAtt MonthlyEstimatedChargesAlarm.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-billing-cw-alarm-arn
      
  BotpressHealthAlarmArn:
    Description: ARN of the Botpress health composite alarm
    Value: !GetAtt BotpressHealthAlarm.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-botpress-health-alarm-arn

  BotpressHighPriorityAlarms:
    Description: List of Botpress high priority alarm ARNs
    Value:
      Fn::Join:
        - ","
        - - !GetAtt BotpressHealthAlarm.Arn
          - !GetAtt BotpressErrorRateAlarm.Arn
          - !GetAtt TokenLimitAlarm.Arn
          - !GetAtt TokenExhaustionAlarm.Arn
          - !GetAtt BotpressIntegrationHealthAlarm.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-botpress-high-priority-alarms

  BotpressMediumPriorityAlarms:
    Description: List of Botpress medium priority alarm ARNs
    Value:
      Fn::Join:
        - ","
        - - !GetAtt BotpressLatencyAlarm.Arn
          - !GetAtt HandoffQueueSizeAlarm.Arn
          - !GetAtt HandoffLatencyAlarm.Arn
          - !GetAtt HandoffSuccessRateAlarm.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-botpress-medium-priority-alarms
      
  DashboardURL:
    Description: URL of the Botpress Dashboard
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${self:custom.service}-${self:provider.stage}-botpress
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-botpress-dashboard-url

  BotpressMetricsAlarmArn:
    Description: ARN of the Botpress metrics alarm
    Value: !GetAtt BotpressMetricsAlarm.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-botpress-metrics-alarm-arn