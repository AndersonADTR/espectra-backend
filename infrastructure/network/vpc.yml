Resources:
  SpectraVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: ${ssm:/espectra/${self:provider.stage}/vpc-cidr}
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      #EnableNetworkAddressUsageMetrics: true
      Tags:
        - Key: Name
          Value: !Sub ${self:custom.service}-${self:provider.stage}-vpc
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}
        - Key: CreatedBy
          Value: CloudFormation
        - Key: SecurityZone
          Value: restricted

  # VPC Flow Logs
  VPCFlowLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vpc/${self:custom.service}-${self:provider.stage}-flow-logs
      RetentionInDays: ${self:custom.logRetentionInDays}
      KmsKeyId: 
        Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-system-kms-key-arn

  VPCFlowLog:
    Type: AWS::EC2::FlowLog
    Properties:
      ResourceType: VPC
      ResourceId: !Ref SpectraVPC
      TrafficType: ALL
      LogGroupName: !Ref VPCFlowLogGroup
      MaxAggregationInterval: 60
      DeliverLogsPermissionArn: !GetAtt VPCFlowLogRole.Arn
      LogDestinationType: cloud-watch-logs
      Tags:
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}

  VPCFlowLogRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:custom.service}-${self:provider.stage}-vpc-flow-log-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: sts:AssumeRole
      Policies:
      - PolicyName: flow-log-policy
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
                - logs:DescribeLogGroups
                - logs:DescribeLogStreams
              Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/vpc/${self:custom.service}-${self:provider.stage}-flow-logs:*
            - Effect: Allow
              Action:
                - kms:Encrypt
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-system-kms-key-arn

  # Internet Gateway
  SpectraIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ${self:custom.service}-${self:provider.stage}-igw
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref SpectraVPC
      InternetGatewayId: !Ref SpectraIGW

  # Public Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SpectraVPC
      CidrBlock: ${ssm:/espectra/${self:provider.stage}/public-subnet-cidrs}
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: ${self:custom.service}-${self:provider.stage}-public-1
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}
        - Key: Type
          Value: Public

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SpectraVPC
      CidrBlock: ${ssm:/espectra/${self:provider.stage}/public-subnet-2-cidrs}
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: ${self:custom.service}-${self:provider.stage}-public-2
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}
        - Key: Type
          Value: Public

  # Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SpectraVPC
      Tags:
        - Key: Name
          Value: ${self:custom.service}-${self:provider.stage}-public-rt
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref SpectraIGW

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # Network ACLs
  PublicNACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref SpectraVPC
      Tags:
        - Key: Name
          Value: ${self:custom.service}-${self:provider.stage}-public-nacl
        - Key: Environment
          Value: ${self:provider.stage}

  PublicNACLInboundHTTPS:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNACL
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443

  PublicNACLInboundHTTP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNACL
      RuleNumber: 110
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80

  PublicNACLInboundEphemeral:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNACL
      RuleNumber: 120
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535

  PublicNACLOutbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNACL
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0

Outputs:
  VpcId:
    Description: VPC ID
    Value: !Ref SpectraVPC
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-vpc-id

  VpcCidr:
    Description: VPC CIDR Block
    Value: !GetAtt SpectraVPC.CidrBlock
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-vpc-cidr

  PublicSubnet1Id:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-public-subnet-1-id

  PublicSubnet1Cidr:
    Description: Public Subnet 1 CIDR Block
    Value: !GetAtt PublicSubnet1.CidrBlock
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-public-subnet-1-cidr

  PublicSubnet2Id:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-public-subnet-2-id

  PublicSubnet2Cidr:
    Description: Public Subnet 2 CIDR Block
    Value: !GetAtt PublicSubnet2.CidrBlock
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-public-subnet-2-cidr

  PublicRouteTableId:
    Description: Public Route Table ID
    Value: !Ref PublicRouteTable
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-public-route-table-id