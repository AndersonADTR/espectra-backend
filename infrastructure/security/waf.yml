Resources:
  SpectraWebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: ${self:custom.service}-${self:provider.stage}-waf
      Description: WAF Web ACL for Spectra APIs with enhanced security rules
      Scope: REGIONAL
      DefaultAction:
        Allow: {}
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: ${self:custom.service}-${self:provider.stage}-waf-metrics
      Rules:
        # Common Rule Set
        - Name: AWSCommonRules
          Priority: 0
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSCommonRulesMetric

        # Rate Limiting
        - Name: IPRateLimit
          Priority: 1
          Action:
            Block: {}
          Statement:
            RateBasedStatement:
              Limit: 2000
              AggregateKeyType: IP
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: IPRateLimitMetric

        # Geo Blocking
        - Name: GeoBlockRule
          Priority: 2
          Action:
            Block: {}
          Statement:
            GeoMatchStatement:
              CountryCodes:
                - CN
                - RU
                - KP
                - IR
                - SY
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: GeoBlockMetric

        # Size Restrictions
        - Name: SizeRestrictionRule
          Priority: 3
          Action:
            Block: {}
          Statement:
            SizeConstraintStatement:
              ComparisonOperator: GT
              Size: 5242880  # 5MB
              FieldToMatch:
                Body: {}
              TextTransformations:
                - Priority: 1
                  Type: NONE
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: SizeRestrictionMetric

  # IP Sets for dynamic blocking
  IPSet:
    Type: AWS::WAFv2::IPSet
    Properties:
      Name: ${self:custom.service}-${self:provider.stage}-ipset
      Description: IP set for dynamic blocking
      Scope: REGIONAL
      IPAddressVersion: IPV4
      Addresses: []
      Tags:
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}

  # WAF Logging Configuration
  WafLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/waf/${self:custom.service}-${self:provider.stage}-logs
      RetentionInDays: ${self:custom.logRetentionInDays}
      KmsKeyId:
        Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-system-kms-key-arn
      Tags:
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}

  # WebACLLoggingConfiguration:
  #   Type: AWS::WAFv2::LoggingConfiguration
  #   DependsOn:
  #     - SpectraWebACL
  #   Properties:
  #     LogDestinationConfigs:
  #       - arn:aws:logs:us-east-1:345594559631:log-group:/aws/waf/espectra-backend-dev:*
  #     ResourceArn: !GetAtt SpectraWebACL.Arn
  #     RedactedFields:
  #       - SingleHeader:
  #           Name: authorization
  #       - SingleHeader:
  #           Name: x-api-key
  #       - SingleHeader:
  #           Name: cookie
  #     LoggingFilter:
  #       DefaultBehavior: KEEP
  #       Filters:
  #         - Behavior: DROP
  #           Requirement: MEETS_ALL
  #           Conditions:
  #             - ActionCondition:
  #                 Action: COUNT

  # WAF Associations
  RestApiWAFAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    DependsOn:
      - SpectraWebACL
      - RestApiId
      - ApiGatewayStage
      - ApiDeployment
    Properties:
      ResourceArn: !Sub arn:aws:apigateway:us-east-1::/restapis/${RestApiId}/stages/api-dev
      WebACLArn: !GetAtt SpectraWebACL.Arn

  # CloudWatch Alarms
  WafBlockedRequestsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: ${self:custom.service}-${self:provider.stage}-waf-blocked-requests
      AlarmDescription: WAF blocked request rate is significantly high
      MetricName: BlockedRequests
      Namespace: AWS/WAFV2
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 1000
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: WebACL
          Value: ${self:custom.service}-${self:provider.stage}-waf
        - Name: Region
          Value: ${self:provider.region}
      AlarmActions:
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-high-priority-topic-arn

  WafRuleGroupMatchesAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: ${self:custom.service}-${self:provider.stage}-waf-rule-matches
      AlarmDescription: High number of WAF rule matches detected
      MetricName: RuleGroupMatch
      Namespace: AWS/WAFV2
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 500
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: WebACL
          Value: ${self:custom.service}-${self:provider.stage}-waf
        - Name: Region
          Value: ${self:provider.region}
      AlarmActions:
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-medium-priority-topic-arn

  # WafFailoverConfig:
  #   Type: AWS::WAFv2::WebACLAssociation
  #   DependsOn:
  #     - WebSocketWAFAssociation
  #   Properties:
  #     WebACLArn: !GetAtt SpectraWebACL.Arn
  #     ResourceArn: !Sub arn:aws:apigateway:${AWS::Region}::/apis/${WebSocketApi}/stages/${self:provider.stage}

Outputs:
  WebACLId:
    Description: ID of the Web ACL
    Value: !GetAtt SpectraWebACL.Id
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-waf-id

  WebACLArn:
    Description: ARN of the Web ACL
    Value: !GetAtt SpectraWebACL.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-waf-arn

  IPSetId:
    Description: ID of the IP Set
    Value: !Ref IPSet
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-ipset-id

  WafLogGroupName:
    Description: Name of the WAF Log Group
    Value: !Ref WafLogGroup
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-waf-log-group