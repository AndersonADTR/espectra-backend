Resources:
  BotpressDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: ${self:custom.service}-${self:provider.stage}-botpress
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "width": 24,
              "height": 3,
              "properties": {
                "view": "singleValue",
                "title": "Service Health Overview",
                "metrics": [
                  [ "Spectra/Botpress", "ServiceHealth", { "stat": "Minimum", "label": "Service Health" } ],
                  [ ".", "TokenUsagePercentage", { "stat": "Maximum", "label": "Token Usage %" } ],
                  [ ".", "HandoffSuccessRate", { "stat": "Average", "label": "Handoff Success %" } ],
                  [ ".", "ActiveSessions", { "stat": "Maximum", "label": "Active Sessions" } ],
                  [ ".", "ErrorRate", { "stat": "Average", "label": "Error Rate %" } ]
                ],
                "period": 300,
                "region": "${AWS::Region}",
                "setPeriodToTimeRange": true,
                "sparkline": true,
                "trend": true
              }
            },
            {
              "type": "metric",
              "width": 12,
              "height": 6,
              "properties": {
                "title": "Botpress Core Metrics",
                "metrics": [
                  [ "Spectra/Botpress", "Requests", { "stat": "Sum", "label": "Total Requests" } ],
                  [ ".", "Errors", { "stat": "Sum", "label": "Total Errors" } ],
                  [ ".", "Latency", { "stat": "Average", "label": "Avg Latency" } ],
                  [ ".", "LatencyP95", { "stat": "p95", "label": "P95 Latency" } ],
                  [ ".", "IntegrationHealth", { "stat": "Minimum", "label": "Integration Health" } ]
                ],
                "period": 300,
                "region": "${AWS::Region}",
                "view": "timeSeries",
                "stacked": false,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                }
              }
            },
            {
              "type": "metric",
              "width": 12,
              "height": 6,
              "properties": {
                "title": "Token Usage Metrics",
                "metrics": [
                  [ "Spectra/Botpress", "TokensConsumed", { "stat": "Sum", "label": "Total Tokens" } ],
                  [ ".", "TokenUsagePercentage", { "stat": "Maximum", "label": "Usage %" } ],
                  [ ".", "TokenLimitWarnings", { "stat": "Sum", "label": "Limit Warnings" } ],
                  [ ".", "TokensRemaining", { "stat": "Minimum", "label": "Remaining Tokens" } ]
                ],
                "period": 300,
                "region": "${AWS::Region}",
                "view": "timeSeries",
                "stacked": false,
                "annotations": {
                  "horizontal": [
                    {
                      "value": ${self:custom.botpressAlarmThresholds.tokenUsage},
                      "label": "Token Usage Threshold",
                      "color": "#ff7f0e"
                    },
                    {
                      "value": 95,
                      "label": "Critical Usage",
                      "color": "#d62728"
                    }
                  ]
                }
              }
            },
            {
              "type": "metric",
              "width": 12,
              "height": 6,
              "properties": {
                "title": "Handoff Metrics",
                "metrics": [
                  [ "Spectra/Botpress", "HandoffRequests", { "stat": "Sum", "label": "Total Requests" } ],
                  [ ".", "HandoffSuccessRate", { "stat": "Average", "label": "Success Rate %" } ],
                  [ ".", "HandoffQueueSize", { "stat": "Maximum", "label": "Queue Size" } ],
                  [ ".", "HandoffLatency", { "stat": "Average", "label": "Latency" } ],
                  [ ".", "HandoffTimeouts", { "stat": "Sum", "label": "Timeouts" } ]
                ],
                "period": 300,
                "region": "${AWS::Region}",
                "view": "timeSeries",
                "stacked": false,
                "annotations": {
                  "horizontal": [
                    {
                      "value": ${self:custom.botpressAlarmThresholds.handoffQueueSize},
                      "label": "Queue Size Threshold",
                      "color": "#ff7f0e"
                    }
                  ]
                }
              }
            },
            {
              "type": "metric",
              "width": 12,
              "height": 6,
              "properties": {
                "title": "Session Metrics",
                "metrics": [
                  [ "Spectra/Botpress", "ActiveSessions", { "stat": "Average", "label": "Active Sessions" } ],
                  [ ".", "SessionDuration", { "stat": "Average", "label": "Avg Duration" } ],
                  [ ".", "SessionsStarted", { "stat": "Sum", "label": "New Sessions" } ],
                  [ ".", "SessionsEnded", { "stat": "Sum", "label": "Ended Sessions" } ],
                  [ ".", "ConcurrentSessions", { "stat": "Maximum", "label": "Max Concurrent" } ]
                ],
                "period": 300,
                "region": "${AWS::Region}",
                "view": "timeSeries",
                "stacked": false
              }
            },
            {
              "type": "metric",
              "width": 12,
              "height": 6,
              "properties": {
                "title": "Business KPIs",
                "metrics": [
                  [ "Spectra/Botpress", "UserSatisfactionScore", { "stat": "Average", "label": "CSAT" } ],
                  [ ".", "AutoResolutionRate", { "stat": "Average", "label": "Auto-Resolution %" } ],
                  [ ".", "AverageResponseTime", { "stat": "Average", "label": "Avg Response Time" } ],
                  [ ".", "FirstResponseTime", { "stat": "Average", "label": "First Response Time" } ]
                ],
                "period": 300,
                "region": "${AWS::Region}",
                "view": "timeSeries",
                "stacked": false,
                "yAxis": {
                  "left": {
                    "min": 0,
                    "max": 100
                  }
                }
              }
            },
            {
              "type": "metric",
              "width": 12,
              "height": 6,
              "properties": {
                "title": "Error Distribution",
                "metrics": [
                  [ "Spectra/Botpress", "BotpressErrors", { "stat": "Sum", "label": "Botpress Errors" } ],
                  [ ".", "HandoffErrors", { "stat": "Sum", "label": "Handoff Errors" } ],
                  [ ".", "TokenErrors", { "stat": "Sum", "label": "Token Errors" } ],
                  [ ".", "SystemErrors", { "stat": "Sum", "label": "System Errors" } ]
                ],
                "period": 300,
                "region": "${AWS::Region}",
                "view": "pie"
              }
            },
            {
              "type": "log",
              "width": 24,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/lambda/${self:custom.service}-${self:provider.stage}-botpress' | fields @timestamp, @message\n| filter @message like /ERROR/\n| sort @timestamp desc\n| limit 100",
                "region": "${AWS::Region}",
                "title": "Botpress Error Logs",
                "view": "table"
              }
            },
            {
              "type": "alarm",
              "width": 24,
              "height": 6,
              "properties": {
                "title": "Active Botpress Alarms",
                "alarms": [
                  "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${self:custom.service}-${self:provider.stage}-botpress-health",
                  "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${self:custom.service}-${self:provider.stage}-botpress-error-rate",
                  "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${self:custom.service}-${self:provider.stage}-botpress-latency",
                  "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${self:custom.service}-${self:provider.stage}-handoff-queue-size",
                  "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${self:custom.service}-${self:provider.stage}-token-usage",
                  "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${self:custom.service}-${self:provider.stage}-token-exhaustion",
                  "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${self:custom.service}-${self:provider.stage}-handoff-success-rate",
                  "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${self:custom.service}-${self:provider.stage}-botpress-integration-health"
                ]
              }
            }
          ]
        }

  # Alarmas para m√©tricas del dashboard
  BotpressMetricsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: ${self:custom.service}-${self:provider.stage}-botpress-metrics
      AlarmDescription: Monitoring of Botpress metrics collection
      MetricName: MetricsDelivery
      Namespace: Spectra/Botpress
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 1
      ComparisonOperator: LessThanThreshold
      AlarmActions:
        - ${self:custom.snsMediumPriorityTopic}
      Tags:
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}

Outputs:
  DashboardURL:
    Description: URL of the Botpress Dashboard
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${self:custom.service}-${self:provider.stage}-botpress
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-botpress-dashboard-url

  BotpressMetricsAlarmArn:
    Description: ARN of the Botpress metrics alarm
    Value: !GetAtt BotpressMetricsAlarm.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-botpress-metrics-alarm-arn