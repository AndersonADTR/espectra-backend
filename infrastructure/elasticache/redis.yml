Resources:
  RedisSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      CacheSubnetGroupName: !Sub "${self:custom.service}-${self:provider.stage}-redis-subnet-group"
      Description: !Sub "${self:custom.service}-${self:provider.stage} subnet group for Redis cluster"
      SubnetIds:
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-private-subnet-1-id
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-private-subnet-2-id
      Tags:
        - Key: Environment
          Value: ${self:provider.stage}
        - Key: Service
          Value: ${self:custom.service}
        - Key: ManagedBy
          Value: CloudFormation

  RedisParameterGroup:
    Type: AWS::ElastiCache::ParameterGroup
    Properties:
      CacheParameterGroupFamily: redis6.x
      Description: !Sub "${self:custom.service}-${self:provider.stage} parameter group for Redis cluster"
      Properties:
        timeout: 30000
        notify-keyspace-events: "Ex"
        activedefrag: "yes"
        tcp-keepalive: 300
        # maxmemory-policy: "volatile-lru"
        # maxmemory-samples: 10
      Tags:
        - Key: Environment
          Value: ${self:provider.stage}
        - Key: Service
          Value: ${self:custom.service}

  RedisBackupBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "${self:custom.service}-${self:provider.stage}-redis-backups-bucket"
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: AutoDelete
            Status: Enabled
            ExpirationInDays: 30
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID:
                Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-system-kms-key-arn
      Tags:
        - Key: Environment
          Value: ${self:provider.stage}
        - Key: Service
          Value: ${self:custom.service}

  RedisCluster:
    Type: AWS::ElastiCache::ReplicationGroup
    DependsOn: 
      - RedisSubnetGroup
      - RedisParameterGroup
    Properties:
      ReplicationGroupId: !Sub "${self:custom.service}-${self:provider.stage}-redis"
      ReplicationGroupDescription: !Sub "${self:custom.service}-${self:provider.stage} Redis cluster for session management"
      Engine: redis
      EngineVersion: "6.x"
      CacheNodeType: ${self:custom.redis.instanceType}
      NumCacheClusters: 2
      AutomaticFailoverEnabled: true
      MultiAZEnabled: true
      CacheParameterGroupName: !Ref RedisParameterGroup
      CacheSubnetGroupName: !Ref RedisSubnetGroup
      SecurityGroupIds:
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-redis-sg-id
      AtRestEncryptionEnabled: true
      TransitEncryptionEnabled: true
      KmsKeyId: 
        Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-system-kms-key-arn
      SnapshotRetentionLimit: 7
      SnapshotWindow: "00:00-01:00"
      Port: 6379
      PreferredCacheClusterAZs:
        - !Select [0, !GetAZs ""]
        - !Select [1, !GetAZs ""]
      Tags:
        - Key: Environment
          Value: ${self:provider.stage}
        - Key: Service
          Value: ${self:custom.service}
        - Key: ManagedBy
          Value: CloudFormation

  # CloudWatch Alarms
  RedisCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${self:custom.service}-${self:provider.stage}-redis-cpu"
      AlarmDescription: Redis cluster CPU utilization exceeds threshold
      MetricName: CPUUtilization
      Namespace: AWS/ElastiCache
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 75
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: breaching
      Dimensions:
        - Name: CacheClusterId
          Value: !Ref RedisCluster
      AlarmActions:
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-high-priority-topic-arn

  RedisMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${self:custom.service}-${self:provider.stage}-redis-memory"
      AlarmDescription: Redis cluster memory usage exceeds threshold
      MetricName: DatabaseMemoryUsagePercentage
      Namespace: AWS/ElastiCache
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: breaching
      Dimensions:
        - Name: CacheClusterId
          Value: !Ref RedisCluster
      AlarmActions:
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-high-priority-topic-arn

  RedisConnectionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${self:custom.service}-${self:provider.stage}-redis-connections"
      AlarmDescription: Redis cluster current connections exceeds threshold
      MetricName: CurrConnections
      Namespace: AWS/ElastiCache
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 1000
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Dimensions:
        - Name: CacheClusterId
          Value: !Ref RedisCluster
      AlarmActions:
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-high-priority-topic-arn

  RedisReplicationLagAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${self:custom.service}-${self:provider.stage}-redis-replication-lag"
      AlarmDescription: Redis cluster replication lag exceeds threshold
      MetricName: ReplicationLag
      Namespace: AWS/ElastiCache
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 1000
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: breaching
      Dimensions:
        - Name: CacheClusterId
          Value: !Ref RedisCluster
      AlarmActions:
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-high-priority-topic-arn
        
  # Nueva alarma para conexiones fallidas
  RedisConnectionFailuresAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${self:custom.service}-${self:provider.stage}-redis-connection-failures"
      AlarmDescription: Redis connection failures detected
      MetricName: ConnectionFailures
      Namespace: AWS/ElastiCache
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Dimensions:
        - Name: CacheClusterId
          Value: !Ref RedisCluster
      AlarmActions:
        - Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-high-priority-topic-arn

Outputs:
  RedisEndpoint:
    Description: Redis primary endpoint
    Value: !GetAtt RedisCluster.PrimaryEndPoint.Address
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-redis-endpoint

  RedisPort:
    Description: Redis port
    Value: !GetAtt RedisCluster.PrimaryEndPoint.Port
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-redis-port

  RedisConnectionString:
    Description: Redis connection string with protocol
    Value: !Sub "redis://${RedisCluster.PrimaryEndPoint.Address}:${RedisCluster.PrimaryEndPoint.Port}"
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-redis-connection-string
      
  RedisClusterId:
    Description: ID of the Redis cluster
    Value: !Ref RedisCluster
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-redis-cluster-id
      
  RedisParameterGroupName:
    Description: Name of the Redis parameter group
    Value: !Ref RedisParameterGroup
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-redis-parameter-group