Resources:
  ChatSessionsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      TableName: ${self:custom.service}-${self:provider.stage}-chat-sessions
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: sessionId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: lastActivity
          AttributeType: S
        - AttributeName: agentId
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
      KeySchema:
        - AttributeName: sessionId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: UserIdStatusIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: status
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: StatusLastActivityIndex
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: lastActivity
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: AgentSessionsIndex
          KeySchema:
            - AttributeName: agentId
              KeyType: HASH
            - AttributeName: lastActivity
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: CreatedAtIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId:
          Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-system-kms-key-arn
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      Tags:
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}
        - Key: Purpose
          Value: ChatSessions
        - Key: Component
          Value: Concierge
        - Key: ManagedBy
          Value: CloudFormation

  SessionMetricsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      TableName: ${self:custom.service}-${self:provider.stage}-session-metrics
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: sessionId
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
        - AttributeName: metricType
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: sessionId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: MetricTypeIndex
          KeySchema:
            - AttributeName: metricType
              KeyType: HASH
            - AttributeName: timestamp
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: DateMetricIndex
          KeySchema:
            - AttributeName: date
              KeyType: HASH
            - AttributeName: metricType
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId:
          Fn::ImportValue: ${self:custom.service}-${self:provider.stage}-system-kms-key-arn
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}
        - Key: Purpose
          Value: SessionMetrics
        - Key: Component
          Value: Analytics
        - Key: ManagedBy
          Value: CloudFormation

  # Enhanced CloudWatch Alarms
  ChatSessionsTableThrottlingAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: ${self:custom.service}-${self:provider.stage}-chat-sessions-throttling
      AlarmDescription: Chat Sessions table throttled requests exceed threshold
      MetricName: ThrottledRequests
      Namespace: AWS/DynamoDB
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: TableName
          Value: !Ref ChatSessionsTable
      AlarmActions:
        - ${self:custom.snsMediumPriorityTopic}
      Tags:
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}

  SessionMetricsTableThrottlingAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: ${self:custom.service}-${self:provider.stage}-session-metrics-throttling
      AlarmDescription: Session Metrics table throttled requests exceed threshold
      MetricName: ThrottledRequests
      Namespace: AWS/DynamoDB
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: TableName
          Value: !Ref SessionMetricsTable
      AlarmActions:
        - ${self:custom.snsMediumPriorityTopic}
      Tags:
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}

  SessionLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: ${self:custom.service}-${self:provider.stage}-sessions-latency
      AlarmDescription: Session operations latency exceeds threshold
      MetricName: SuccessfulRequestLatency
      Namespace: AWS/DynamoDB
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 3
      Threshold: 100
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: TableName
          Value: !Ref ChatSessionsTable
      AlarmActions:
        - ${self:custom.snsMediumPriorityTopic}
      Tags:
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}

  ActiveSessionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: ${self:custom.service}-${self:provider.stage}-active-sessions
      AlarmDescription: Number of active sessions exceeds threshold
      MetricName: ActiveSessions
      Namespace: ${self:custom.service}/${self:provider.stage}
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 1000
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - ${self:custom.snsMediumPriorityTopic}
      Tags:
        - Key: Service
          Value: ${self:custom.service}
        - Key: Environment
          Value: ${self:provider.stage}

Outputs:
  ChatSessionsTableName:
    Description: Name of the Chat Sessions table
    Value: !Ref ChatSessionsTable
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-chat-sessions-table-name

  ChatSessionsTableArn:
    Description: ARN of the Chat Sessions table
    Value: !GetAtt ChatSessionsTable.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-chat-sessions-table-arn

  SessionMetricsTableName:
    Description: Name of the Session Metrics table
    Value: !Ref SessionMetricsTable
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-session-metrics-table-name

  SessionMetricsTableArn:
    Description: ARN of the Session Metrics table
    Value: !GetAtt SessionMetricsTable.Arn
    Export:
      Name: ${self:custom.service}-${self:provider.stage}-session-metrics-table-arn